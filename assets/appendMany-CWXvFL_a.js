const p="modulepreload",y=function(i){return"/"+i},d={},E=function(l,r,a){let t=Promise.resolve();if(r&&r.length>0){document.getElementsByTagName("link");const e=document.querySelector("meta[property=csp-nonce]"),n=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute("nonce"));t=Promise.allSettled(r.map(o=>{if(o=y(o),o in d)return;d[o]=!0;const u=o.endsWith(".css"),f=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${o}"]${f}`))return;const s=document.createElement("link");if(s.rel=u?"stylesheet":p,u||(s.as="script"),s.crossOrigin="",s.href=o,n&&s.setAttribute("nonce",n),document.head.appendChild(s),u)return new Promise((m,h)=>{s.addEventListener("load",m),s.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${o}`)))})}))}function c(e){const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=e,window.dispatchEvent(n),!n.defaultPrevented)throw e}return t.then(e=>{for(const n of e||[])n.status==="rejected"&&c(n.reason);return l().catch(c)})};async function g(i){const l=[];for(const r in i){const t=(await i[r]()).default;l.push(t)}return l}async function v(i,l,r){const a=await g(l);for(let t=0;t<a.length;t++){const c=document.createElement("img");r&&r(c),c.src=a[t],c.alt=`Image ${t}`,i.appendChild(c)}}export{E as _,v as a};
